c
v
c
text
result
n
matches.reject! { |name| blacklist.any? { |word| name.include?(word) } }
blacklist.any? { |word| name.include?(word) }
matches = text.scan(/\b[A-Z][A-Z\s]+(?:INC|CORP|LLC|LTD|BANK|SECURED)?\b/)
 matches.find { |name| name.match?(/\b(INC|CORP|LLC|LTD|SECURED|BANK)\b/) }
matches
n
matches
n
 text.scan(/\b[A-Z][A-Z\s]+(?:INC|CORP|LLC|LTD|BANK|SECURED)?\b/)
blacklist
n
text
n
c
matches
n
matches
n
blacklist
n
text
n
text
c
valid_params
n
company
c
company_name
extracted_text
n
file_path
c
n
company_name
n
c
n
extract_text(file_path)
file_path
c
uploaded_file.read
with_tempfile
with_tempfile(uploaded_file.read)
c
cc
c
line
c
line
c
line
c
line
n
line
 text
c
line
 text
c
 text
line
c
n
@invoices.count
@invoices
c
n
c
params
@company
c
@check.save!
@check@check
@check
c
params[:check]
params
c
check_params
c
params.permit
params["check_number"]
params[:check_number]
params
c
company_name
check_number
invoice_numbers
n
c
existing_company
n
c
n
c
check_number
company_name
c
check_number
company_name
c
check_number
company_name
c
extracted_text = process_ocr(image_path)
image_path = params[:image]
image_path = params[:image].path
params[:image]
params
c
extracted_text
company_name
extracted_text
check_number
